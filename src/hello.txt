
// // import React, { useState, useEffect } from "react";

// // const TrafficSimulation = () => {
// //   const [signals, setSignals] = useState([]);
// //   const [groupId] = useState("6773b57ae9eed75638f07f86");

// //   // Fetch initial traffic data from the API
// //   useEffect(() => {
// //     const fetchTrafficData = async () => {
// //       try {
// //         const response = await fetch(`https://go-clean-architectur.onrender.com/v1/signal/${groupId}`);
// //         if (response.ok) {
// //           const data = await response.json();
// //           setSignals(data.signals);
// //         } else {
// //           console.error("Failed to fetch traffic data");
// //         }
// //       } catch (error) {
// //         console.error("Error fetching traffic data", error);
// //       }
// //     };
// //     fetchTrafficData();
// //   }, [groupId]);

// //   // Signal cycling logic with API request when switching from Green to Yellow

  
// //         useEffect(() => {
// //   const interval = setInterval(() => {
// //     setSignals((prevSignals) =>
// //       prevSignals.map((signal) => {
// //         let { current_color, green_duration, yellow_duration, red_duration } = signal;

// //         if (current_color === "green") {
// //           green_duration--;
// //           if (green_duration === 0) {
           
// //             current_color = "yellow";
// //             yellow_duration = 5; // Reset yellow duration
// //             setTimeout(() => {
// //               fetchTrafficUpdate();

// //             }, 4500);
// //           }
// //         } else if (current_color === "yellow") {
// //           yellow_duration--; // Countdown yellow duration
         
// //           if (yellow_duration === 0) {
// //             current_color = red_duration > 0 ? "red" : "green";
// //           }
// //         } else if (current_color === "red") {
// //           red_duration--;
// //           if (red_duration === 0) {
           
// //             current_color = "yellow";
          
// //             yellow_duration = 5; // Reset yellow duration

// //           }
// //         }

// //         return {
// //           ...signal,
// //           current_color,
// //           green_duration,
// //           yellow_duration,
// //           red_duration,
// //         };
// //       })
// //     );
// //   }, 1000);

// //   return () => clearInterval(interval);
// // }, []);


  

  



// //   // Fetch traffic update from the API
// //   const fetchTrafficUpdate = async () => {
// //     try {
// //       const response = await fetch(`https://go-clean-architectur.onrender.com/v1/signal/${groupId}`);
// //       if (response.ok) {
// //         const data = await response.json();
// //         setSignals((prevSignals) =>
// //           prevSignals.map((signal) => {
// //             const updatedSignal = data.signals.find((s) => s.signal_id === signal.signal_id);
// //             return updatedSignal ? { ...signal, ...updatedSignal } : signal;
// //           })
// //         );
// //       } else {
// //         console.error("Failed to fetch updated traffic data");
// //       }
// //     } catch (error) {
// //       console.error("Error fetching updated traffic data", error);
// //     }
// //   };

// //   return (
// //     <div className="flex flex-col items-center p-6 space-y-6 bg-gray-100 h-screen">
// //       <h1 className="text-2xl font-bold text-gray-800">{`Group Tokyo`}</h1>
// //       <div className="grid grid-cols-3 gap-6">
// //         {signals.map((signal) => (
// //           <div
// //             key={signal.signal_id}
// //             className="w-40 p-4 bg-white rounded-lg shadow-md flex flex-col items-center"
// //           >
// //             <h2 className="text-lg font-semibold text-gray-700">Lane {signal.lane_no}</h2>
// //             <div
// //               className={`w-16 h-16 rounded-full border-4 ${
// //                 signal.current_color === "green"
// //                   ? "bg-green-500 border-green-700"
// //                   : signal.current_color === "yellow"
// //                   ? "bg-yellow-500 border-yellow-700"
// //                   : "bg-red-500 border-red-700"
// //               }`}
// //             ></div>
// //             <p className="mt-2 text-sm text-gray-500">
// //               {signal.current_color} for{" "}
// //               {signal.current_color === "green"
// //                 ? signal.green_duration
// //                 : signal.current_color === "yellow"
// //                 ? signal.yellow_duration
// //                 : signal.red_duration}{" "}
// //               seconds
// //             </p>
// //             <p className="mt-2 text-sm text-gray-500">Vehicles: {signal.vehicle_count}</p>
// //           </div>
// //         ))}
// //       </div>
// //     </div>
// //   );
// // };

// // export default TrafficSimulation;


// import React, { useState, useEffect } from "react";
// import { useSelector } from "react-redux";

// const TrafficSimulation = () => {
//   const { data, loading, error } = useSelector((state) => state.groupTraffic);

//   const [signals, setSignals] = useState(data.signals);
//   const [groupId] = useState("6773b57ae9eed75638f07f86");

//   useEffect(() => {
//     dispatch(getGroupSignalDataThunk('6773b57ae9eed75638f07f86'));
//   }, [dispatch]);


  
//         useEffect(() => {
//   const interval = setInterval(() => {
//     setSignals((prevSignals) =>
//       prevSignals.map((signal) => {
//         let { current_color, green_duration, yellow_duration, red_duration } = signal;

//         if (current_color === "green") {
//           green_duration--;
//           if (green_duration === 0) {
           
//             current_color = "yellow";
//             yellow_duration = 5; // Reset yellow duration
//             setTimeout(() => {
//               fetchTrafficUpdate();

//             }, 4500);
//           }
//         } else if (current_color === "yellow") {
//           yellow_duration--; // Countdown yellow duration
         
//           if (yellow_duration === 0) {
//             current_color = red_duration > 0 ? "red" : "green";
//           }
//         } else if (current_color === "red") {
//           red_duration--;
//           if (red_duration === 0) {
           
//             current_color = "yellow";
          
//             yellow_duration = 5; // Reset yellow duration

//           }
//         }

//         return {
//           ...signal,
//           current_color,
//           green_duration,
//           yellow_duration,
//           red_duration,
//         };
//       })
//     );
//   }, 1000);

//   return () => clearInterval(interval);
// }, []);


  

  



//   // Fetch traffic update from the API
//   const fetchTrafficUpdate = async () => {
//     try {
//       const response = await fetch(`https://go-clean-architectur.onrender.com/v1/signal/${groupId}`);
//       if (response.ok) {
//         const data = await response.json();
//         setSignals((prevSignals) =>
//           prevSignals.map((signal) => {
//             const updatedSignal = data.signals.find((s) => s.signal_id === signal.signal_id);
//             return updatedSignal ? { ...signal, ...updatedSignal } : signal;
//           })
//         );
//       } else {
//         console.error("Failed to fetch updated traffic data");
//       }
//     } catch (error) {
//       console.error("Error fetching updated traffic data", error);
//     }
//   };

//   return (
//     <div className="flex flex-col items-center p-6 space-y-6 bg-gray-100 h-screen">
//       <h1 className="text-2xl font-bold text-gray-800">{`Group Tokyo`}</h1>
//       <div className="grid grid-cols-3 gap-6">
//         {signals.map((signal) => (
//           <div
//             key={signal.signal_id}
//             className="w-40 p-4 bg-white rounded-lg shadow-md flex flex-col items-center"
//           >
//             <h2 className="text-lg font-semibold text-gray-700">Lane {signal.lane_no}</h2>
//             <div
//               className={`w-16 h-16 rounded-full border-4 ${
//                 signal.current_color === "green"
//                   ? "bg-green-500 border-green-700"
//                   : signal.current_color === "yellow"
//                   ? "bg-yellow-500 border-yellow-700"
//                   : "bg-red-500 border-red-700"
//               }`}
//             ></div>
//             <p className="mt-2 text-sm text-gray-500">
//               {signal.current_color} for{" "}
//               {signal.current_color === "green"
//                 ? signal.green_duration
//                 : signal.current_color === "yellow"
//                 ? signal.yellow_duration
//                 : signal.red_duration}{" "}
//               seconds
//             </p>
//             <p className="mt-2 text-sm text-gray-500">Vehicles: {signal.vehicle_count}</p>
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// export default TrafficSimulation;

// import React, { useState, useEffect } from "react";
// import { useSelector, useDispatch } from "react-redux";
// import { getGroupSignalDataThunk } from "./redux/group_traffic/GroupTrafficThunk";


// const TrafficSimulation = ({data}) => {
//   const dispatch = useDispatch();  // Get the dispatch function from Redux
//   const { data, loading, error } = useSelector((state) => state.groupTraffic);

//   const [signals, setSignals] = useState(data);
//   const [groupId] = useState("6773b57ae9eed75638f07f86");
//   const [isDataFetched, setIsDataFetched] = useState(false);

//   // Dispatch the action to fetch signal data on component mount
//   useEffect(() => {
//     if (!isDataFetched) {
//       dispatch(getGroupSignalDataThunk(groupId))
//         .unwrap()
//         .then(() => {
//           if (data && data.signals) {
//             setSignals(data.signals);
//             setIsDataFetched(true);  // Set the flag to prevent further dispatching
//           }
//         })
//         .catch((err) => {
//           console.error("Error fetching group signal data:", err);
//         });
//     }
//   }, [dispatch, groupId, isDataFetched]); 

//   // Update signals every second
//   useEffect(() => {
//     const interval = setInterval(() => {
//       setSignals((prevSignals) =>
//         prevSignals.map((signal) => {
//           let { current_color, green_duration, yellow_duration, red_duration } = signal;

//           if (current_color === "green") {
//             green_duration--;
//             if (green_duration === 0) {
//               current_color = "yellow";
//               yellow_duration = 5; // Reset yellow duration
//               setTimeout(() => {
//                 dispatch(getGroupSignalDataThunk(groupId)); // Dispatch to fetch the updated data
//                 setSignals(data.signals)
//               }, 4500);

//             }
//           } else if (current_color === "yellow") {
//             yellow_duration--; // Countdown yellow duration

//             if (yellow_duration === 0) {
//               current_color = red_duration > 0 ? "red" : "green";
//             }
//           } else if (current_color === "red") {
//             red_duration--;
//             if (red_duration === 0) {
//               current_color = "yellow";
//               yellow_duration = 5; // Reset yellow duration
//             }
//           }

//           return {
//             ...signal,
//             current_color,
//             green_duration,
//             yellow_duration,
//             red_duration,
//           };
//         })
//       );
//     }, 1000);

//     return () => clearInterval(interval);
//   }, [signals, dispatch, groupId]);
// if(loading) return(
//   <div>
//     Loading ...
//   </div>
// )
//   return (
//     <div className="flex flex-col items-center p-6 space-y-6 bg-gray-100 h-screen">
//       <h1 className="text-2xl font-bold text-gray-800">{`Group Tokyo`}</h1>
//       <div className="grid grid-cols-3 gap-6">
//         {signals.map((signal) => (
//           <div
//             key={signal.signal_id}
//             className="w-40 p-4 bg-white rounded-lg shadow-md flex flex-col items-center"
//           >
//             <h2 className="text-lg font-semibold text-gray-700">Lane {signal.lane_no}</h2>
//             <div
//               className={`w-16 h-16 rounded-full border-4 ${
//                 signal.current_color === "green"
//                   ? "bg-green-500 border-green-700"
//                   : signal.current_color === "yellow"
//                   ? "bg-yellow-500 border-yellow-700"
//                   : "bg-red-500 border-red-700"
//               }`}
//             ></div>
//             <p className="mt-2 text-sm text-gray-500">
//               {signal.current_color} for{" "}
//               {signal.current_color === "green"
//                 ? signal.green_duration
//                 : signal.current_color === "yellow"
//                 ? signal.yellow_duration
//                 : signal.red_duration}{" "}
//               seconds
//             </p>
//             <p className="mt-2 text-sm text-gray-500">Vehicles: {signal.vehicle_count}</p>
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// export default TrafficSimulation;